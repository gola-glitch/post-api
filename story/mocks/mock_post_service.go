// Code generated by MockGen. DO NOT EDIT.
// Source: post_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	golaerror "github.com/gola-glitch/gola-utils/golaerror"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockPostService is a mock of PostService interface.
type MockPostService struct {
	ctrl     *gomock.Controller
	recorder *MockPostServiceMockRecorder
}

// MockPostServiceMockRecorder is the mock recorder for MockPostService.
type MockPostServiceMockRecorder struct {
	mock *MockPostService
}

// NewMockPostService creates a new mock instance.
func NewMockPostService(ctrl *gomock.Controller) *MockPostService {
	mock := &MockPostService{ctrl: ctrl}
	mock.recorder = &MockPostServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPostService) EXPECT() *MockPostServiceMockRecorder {
	return m.recorder
}

// LikePost mocks base method.
func (m *MockPostService) LikePost(ctx context.Context, postID, userID uuid.UUID) *golaerror.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LikePost", ctx, postID, userID)
	ret0, _ := ret[0].(*golaerror.Error)
	return ret0
}

// LikePost indicates an expected call of LikePost.
func (mr *MockPostServiceMockRecorder) LikePost(ctx, postID, userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LikePost", reflect.TypeOf((*MockPostService)(nil).LikePost), ctx, postID, userID)
}

// PublishPost mocks base method.
func (m *MockPostService) PublishPost(ctx context.Context, draftUID, userUUID uuid.UUID) *golaerror.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PublishPost", ctx, draftUID, userUUID)
	ret0, _ := ret[0].(*golaerror.Error)
	return ret0
}

// PublishPost indicates an expected call of PublishPost.
func (mr *MockPostServiceMockRecorder) PublishPost(ctx, draftUID, userUUID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PublishPost", reflect.TypeOf((*MockPostService)(nil).PublishPost), ctx, draftUID, userUUID)
}
