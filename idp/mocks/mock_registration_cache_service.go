// Code generated by MockGen. DO NOT EDIT.
// Source: service/registration_cache_service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	golaerror "github.com/inclusi-blog/gola-utils/golaerror"
	gomock "github.com/golang/mock/gomock"
	request "post-api/idp/models/request"
	reflect "reflect"
)

// MockRegistrationCacheService is a mock of RegistrationCacheService interface
type MockRegistrationCacheService struct {
	ctrl     *gomock.Controller
	recorder *MockRegistrationCacheServiceMockRecorder
}

// MockRegistrationCacheServiceMockRecorder is the mock recorder for MockRegistrationCacheService
type MockRegistrationCacheServiceMockRecorder struct {
	mock *MockRegistrationCacheService
}

// NewMockRegistrationCacheService creates a new mock instance
func NewMockRegistrationCacheService(ctrl *gomock.Controller) *MockRegistrationCacheService {
	mock := &MockRegistrationCacheService{ctrl: ctrl}
	mock.recorder = &MockRegistrationCacheServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRegistrationCacheService) EXPECT() *MockRegistrationCacheServiceMockRecorder {
	return m.recorder
}

// SaveUserDetailsInCache mocks base method
func (m *MockRegistrationCacheService) SaveUserDetailsInCache(request request.NewRegistrationRequest, ctx context.Context) *golaerror.Error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveUserDetailsInCache", request, ctx)
	ret0, _ := ret[0].(*golaerror.Error)
	return ret0
}

// SaveUserDetailsInCache indicates an expected call of SaveUserDetailsInCache
func (mr *MockRegistrationCacheServiceMockRecorder) SaveUserDetailsInCache(request, ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveUserDetailsInCache", reflect.TypeOf((*MockRegistrationCacheService)(nil).SaveUserDetailsInCache), request, ctx)
}

// GetUserDetailsFromCache mocks base method
func (m *MockRegistrationCacheService) GetUserDetailsFromCache(activationHash string, ctx context.Context) (request.InitiateRegistrationRequest, *golaerror.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserDetailsFromCache", activationHash, ctx)
	ret0, _ := ret[0].(request.InitiateRegistrationRequest)
	ret1, _ := ret[1].(*golaerror.Error)
	return ret0, ret1
}

// GetUserDetailsFromCache indicates an expected call of GetUserDetailsFromCache
func (mr *MockRegistrationCacheServiceMockRecorder) GetUserDetailsFromCache(activationHash, ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserDetailsFromCache", reflect.TypeOf((*MockRegistrationCacheService)(nil).GetUserDetailsFromCache), activationHash, ctx)
}
